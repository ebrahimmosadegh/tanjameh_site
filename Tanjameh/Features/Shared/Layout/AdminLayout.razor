@using Radzen
@using Radzen.Blazor

@inherits LayoutComponentBase
@inject CookieThemeService CookieThemeService
@using System.Globalization;
@inject Microsoft.Extensions.Localization.IStringLocalizer<MainLayout> L
@rendermode InteractiveServer


<HeadContent>
    <RadzenTheme @rendermode="@InteractiveServer" Theme="default" />
    <link rel="stylesheet" href="css/admin-site.css?v=1.2" />
</HeadContent>


<RadzenComponents />

<RadzenLayout dir=@(CultureInfo.CurrentCulture.Name =="fa-IR" ? "RTL" : "LTR")
              lang=@(CultureInfo.CurrentCulture.Name)
              style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body';"
              class="@(IconStatus is IconStatus.NotLoaded ? "global-icon-notloaded" :  IconStatus is IconStatus.Loading ? "global-icon-loading" : "global-icon-loaded")">
    <RadzenHeader>
        <RadzenRow JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="0">
            <RadzenColumn Size="5">
                <RadzenSidebarToggle Click="@SidebarToggleClick"></RadzenSidebarToggle>
            </RadzenColumn>
            <RadzenColumn Size="7">
                <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem" class="rz-px-2">
                    @* <CulturePicker /> *@
                    <RadzenAppearanceToggle />
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>
    <RadzenBody Expanded="@sidebarExpanded">
        <RadzenRow class="rz-mx-auto rz-px-4 rz-pt-2 rz-pt-md-4 rz-pt-lg-6 rz-pt-xl-12 rz-pb-2 rz-pb-lg-12" Style="max-width: 1440px;">
            <RadzenColumn Size="12">
                @Body
            </RadzenColumn>
        </RadzenRow>
    </RadzenBody>
    <RadzenSidebar Expanded="@sidebarExpanded" style="z-index: 2">
        <RadzenStack AlignItems="Radzen.AlignItems.Center" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding); border-bottom: var(--rz-panel-menu-item-border);">
            <RadzenImage Path="images/logo.png" style="width: 48px; height: 48px;" AlternateText="Application logo"></RadzenImage>
            <RadzenText Text="Tanjameh.Admin" TextStyle="Radzen.Blazor.TextStyle.Subtitle1" class="rz-mb-0" style="color: var(--rz-sidebar-color);" />
        </RadzenStack>
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Home" Path="/admin" />

            <RadzenPanelMenuItem Text="دسته بندی ها" Path="/admin/category">
                <RadzenPanelMenuItem Text="مپ دسته بندی به api" Path="/admin/category/map-to-apis" />
                <RadzenPanelMenuItem Text="بروز رسانی از api" Path="/admin/category/fetch" />
            </RadzenPanelMenuItem>

            <RadzenPanelMenuItem Text="محصولات">
                <RadzenPanelMenuItem Text="بروز رسانی از api" Path="/admin/product/fetch" />
                <RadzenPanelMenuItem Text="مدیریت فایل ها" Path="/admin/media" />
            </RadzenPanelMenuItem>

            <RadzenPanelMenuItem Text="بنر ها" Path="/admin/banner" />

            <RadzenPanelMenuItem Text="تنظیمات">
                <RadzenPanelMenuItem Text="واحد های ارز" Path="/admin/currency" />
                <RadzenPanelMenuItem Text="تبدیل ارز" Path="/admin/currency/conversions" />
                <RadzenPanelMenuItem Text="وزن" Path="/admin/weight/source" />
                <RadzenPanelMenuItem Text="قیمت وزن کالا" Path="/admin/weight/product-price" />
            </RadzenPanelMenuItem>
        </RadzenPanelMenu>
        <RadzenStack AlignItems="Radzen.AlignItems.Center" Gap="0" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding);">
            <RadzenText Text="Tanjameh.Admin v1.0.0" TextStyle="Radzen.Blazor.TextStyle.Caption" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
            <RadzenText Text="Copyright Ⓒ 2024" TextStyle="Radzen.Blazor.TextStyle.Caption" class="rz-mb-0" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
        </RadzenStack>
    </RadzenSidebar>
</RadzenLayout>


<script>

    var GLOBAL = {};
    GLOBAL.DotNetReference = null;
    GLOBAL.SetDotnetReference = function (pDotNetReference) {
        GLOBAL.DotNetReference = pDotNetReference;
    };

    (function () {
        let iconloaded = false;
        window.initIcons = () => {
            if (iconloaded)
                return;
            var fontNames = ['Material Symbols'];

            Promise.all(fontNames.map(font =>
                document.fonts.load(`1em "${font}"`)
            )).then(() => {
                GLOBAL.DotNetReference.invokeMethodAsync('SetIconLoaded')
                    .then(data => {
                        iconloaded = data;
                    });
            }).catch((e) => {
                console.error('Some fonts failed to load:', e);
                // for (var i = 0; i < icons.length; i++) {
                //     icons[i].classList.remove('icon-hidden');
                //     icons[i].classList.add('icon-visible');
                // }
            });
        }
    }
    )();




</script>
